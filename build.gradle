// For those who want the bleeding edge
plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
}

version = "1.5.3"
group= "lumien.bloodmoon" // http://maven.apache.org/guides/mini/guide-naming-conventions.html

sourceCompatibility = targetCompatibility = "17" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "17"
}

archivesBaseName = "Bloodmoon-MC1.19.2"

jar {
    manifest {
        attributes("FMLCorePluginContainsFMLMod": "true", "FMLCorePlugin": "lumien.bloodmoon.asm.LoadingPlugin","FMLAT": "Bloodmoon_at.cfg")
    }
}

repositories {
    maven {
        url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }

    mavenCentral()
    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }

    maven {
        name = "DevOS One"
        url = ("https://mvn.devos.one/snapshots/")
    }

    maven {
        name = "JitPack"
        url = ("https://jitpack.io/")
    }

    maven {
        name = "Cafeteria Dev"
        url = ("https://maven.cafeteria.dev/releases/")
        content {
            includeGroup("dev.cafeteria")
        }
    }

    maven {
        name = "JamiesWhiteShirt Dev"
        url = ("https://maven.jamieswhiteshirt.com/libs-release")
        content {
            includeGroup("com.jamieswhiteshirt")
        }
    }

    maven { url "https://maven.architectury.dev/" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven {
        name = "Modrinth"
        url "https://api.modrinth.com/maven"
        content {
            includeGroup("maven.modrinth")
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.19.2:2022.11.27@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.minecraftforge:forgeconfigapiport-fabric:4.2.9"

    implementation 'com.electronwill.night-config:core:3.6.5'
    implementation 'com.electronwill.night-config:toml:3.6.5'

    include(modImplementation("io.github.fabricators_of_create.Porting-Lib:porting-lib:2.1.875+1.19.2"))
    include modImplementation("com.jamieswhiteshirt:reach-entity-attributes:2.3.0")

    modApi "dev.architectury:architectury-fabric:6.5.85"
    modApi "me.shedaniel.cloth:cloth-config-fabric:8.2.88"
    modApi "com.terraformersmc:modmenu:4.2.0-beta.2"

    modRuntimeOnly ("maven.modrinth:ferrite-core:5.0.3-fabric")
    modRuntimeOnly ("maven.modrinth:lazydfu:0.1.3")
    modImplementation ("maven.modrinth:sodium:mc1.19.2-0.4.4")
    modRuntimeOnly ("maven.modrinth:lithium:mc1.19.2-0.11.1")
    modRuntimeOnly ("maven.modrinth:starlight:1.1.1+1.19")
    modRuntimeOnly ("maven.modrinth:indium:1.0.9+mc1.19.2")

    runtimeOnly ("org.joml:joml:1.10.4")
}
processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}